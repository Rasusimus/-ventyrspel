import random as rand
import time


class Colors:
    red = "\u001b[31m"
    yellow = "\u001b[33m"
    green = "\u001b[32m"
    black = "\u001b[30m"
    bold = "\u001b[1m"
    background = "\u001b[47m"
    endc = "\u001b[0m"


class Items: #Alla items
    def __init__(self, name, attack_bonus, defence_bonus):
        self.name = name
        self.str_bonus = attack_bonus
        self.def_bonus = defence_bonus


class Stats: #Hur starka monstrerna och spelarna är 
    def __init__(self, strength, defence, dexterity, hp):
        self.strength = strength
        self.defence = defence
        self.dexterity = dexterity
        self.hp = hp
    lvl = 1
    lives = 3
    inventory = []


class Dörr: # Dörrarna bestäms ifall de innehåller ett monster, en kista eller en fälla
    def bestäm(spelare):
        best_tal = rand.randint(1,10)
        if best_tal > 5:
            fall = 1
        elif best_tal < 5:
            fall = 2
        else:
            fall = 3
        return fall
    

item_names = ["Bracelet", "Necklace", "Magic Scroll", "Sword", "Battleaxe", "Bow", "Spear", "Dagger", "Shield", "Chestplate", "Health potion"]
item_prefix = ["Holy", "Cursed"]


def slow_print(text,tid):
    for i in text:
        print(i, end="", flush=True)
        time.sleep(tid)
    print()


def skapa_monster(spelare): # Skapar ett monster och sköter "slagsmålet"
    if spelare.lvl < 5:
        monstret = Stats(rand.randint(5,10),rand.randint(5,10), 0, rand.randint(30,50))
    elif spelare.lvl < 8:
        monstret = Stats(rand.randint(8,15),rand.randint(8,15),0,rand.randint(40,70))
    else:
         monstret = Stats(rand.randint(10,18),rand.randint(10,18),0,rand.randint(60,100))
    print(f"\nDu stöter på ett monster bakom dörren den har styrkan {monstret.strength}, försvaret {monstret.defence} och hp {monstret.hp}")
    while True:
        första_val = input("Vill du slåss(1) eller försöka rymma(2)? -> ")
        if första_val == "2":
            sannolikhet = ((spelare.dexterity)*5)
            rng = rand.randint(1,100)
            if rng > sannolikhet:
                print(f"{Colors.red}Du lyckades inte rymma och måste slåss!{Colors.endc}")
                combat(spelare, monstret)
                break
            else:
                print("Du lyckades rymma!\n")
                break
        elif första_val == "1":
            combat(spelare, monstret)
            break
        else:
            print(f"{Colors.bold + Colors.red}Ogiltig input!{Colors.endc}")


def skapa_kista(spelare): #Skapar en kista
    item = skapa_item(spelare)
    if item.name == "Health potion":
        print(f"{Colors.green}Du har hittat ett item! Ditt item är en health potion det ger din karaktär mer liv, HP +15{Colors.endc}")
    else:
        print(f"{Colors.green}\nDu har hittat ett item!\nDitt item är <<{item.name}>>{Colors.endc}\n  {Colors.black + Colors.background} +{item.str_bonus} STR {Colors.endc} {Colors.black + Colors.background} +{item.def_bonus} DEF {Colors.endc}\n")
        exists = False
        for equipement in spelare.inventory:
            if item.name == equipement.name:
                exists = True
                print("Du har redan ett item med samma namn, vill du byta ut det du har mot det du hittade?")
                print(f"Ditt item: <<{item.name}>> (+{equipement.str_bonus} STR) (+{equipement.def_bonus})")
                val = input("Ja/Nej -> ")
                if val.lower().replace(" ", "").replace(".", "") == "ja":
                    spelare.strength -= equipement.str_bonus
                    spelare.defence -= equipement.def_bonus
                    spelare.inventory.remove(equipement)
                    spelare.inventory.append(item)
                    spelare.strength += item.str_bonus
                    spelare.defence += item.def_bonus
                    print("Du har valt att byta ut ditt item.\n")
                    break
                elif val.lower().replace(" ", "").replace(".", "") == "nej":
                    print("Du har valt att behålla ditt item.\n")
                    break
                else:
                    print(f"{Colors.red + Colors.bold}Ogiltig input!{Colors.endc}")
        if len(spelare.inventory) < 5 and item.name not in spelare.inventory: #Tittar om du får plats med det item du hittade och tittar så att du inte redan har ett sånt item
            spelare.strength += item.str_bonus
            spelare.defence += item.def_bonus
            spelare.inventory.append(item)
        else:
            while True:
                if exists is True:
                    break
                print("Ditt inventory:")
                nummer = 1
                for it in spelare.inventory: #Skriver ut hela ditt inventory
                        print(f"  {nummer}: {it.name} (+{it.str_bonus} STR) (+{it.def_bonus} DEF)")
                        nummer += 1
                val = input("Ditt inventory är fullt, vill du byta ut ett item (1) eller lämna kvar det (2)? -> ")
                if val == "1":
                    while True:
                        try:
                            valda_item = int(input("Välj vilket item du vill byta ut med (1-5) -> "))-1 #Om vi har tid ändrar vi så att vi kan skriva namnet på itemet
                            if valda_item > 5 or valda_item < 0:
                                print("Du har inte så många items.")
                            else:
                                break
                        except ValueError:
                            print(f"{Colors.bold + Colors.red}Ogiltig input!{Colors.endc}")
                    spelare.strength -= spelare.inventory[valda_item].str_bonus
                    spelare.defence -= spelare.inventory[valda_item].def_bonus
                    spelare.inventory.pop(valda_item)
                    spelare.inventory.append(item)
                    spelare.strength += item.str_bonus
                    spelare.defence += item.def_bonus
                    print("Ditt item har bytts ut!\n")
                    break
                elif val == "2":
                    break
                else: 
                    print(f"{Colors.bold + Colors.red}Ogiltig input{Colors.endc}")
                

def skapa_fälla(spelare): #Skapar en fälla och tar bort hp från spelaren
    skada = rand.randint(1,5)
    print(f"\nDu hamnar i en fälla!")
    input(f"Klicka på {Colors.bold}Enter{Colors.endc} för att försöka fly!")
    sannolikhet = ((spelare.dexterity)*5)
    rng = rand.randint(1,100)
    if rng > sannolikhet:
        print(f"{Colors.red}Du lyckades inte undvika fällan!{Colors.endc}")
        print(f"Du tar {skada} skada!\n")
        spelare.hp -= (skada)
    else:
        print("Du lyckades undvika fällan!\n")



def skapa_item(spelare): #Skapar ett item, det kan ha olika bonusar beroende på vad namnet är.
    index_val = rand.randint(0,10)
    if item_names[index_val] == "Bracelet" or item_names[index_val] == "Necklace":
        skapade_item = Items(item_names[index_val], rand.randint(0,3), rand.randint(0,3))
    elif item_names[index_val] == "Sword" or item_names[index_val] == "Battleaxe" or item_names[index_val] == "Bow" or item_names[index_val] == "Spear" or item_names[index_val] == "Dagger":
        skapade_item = Items(item_names[index_val], rand.randint(1,4), rand.randint(0,0))
    elif item_names[index_val] == "Magic Scroll":
        skapade_item = Items(item_names[index_val], 0, 0)
    elif item_names[index_val] == "Health potion":
        spelare.hp += 15
        skapade_item = Items(item_names[index_val], 0, 0)
    elif item_names[index_val] == "Shield" or item_names[index_val] == "Chestplate":
        skapade_item = Items(item_names[index_val], rand.randint(0,0), rand.randint(1,4))
    return skapade_item


def lvl_lives_kolla(self): #Funktion som kollar i början av varje runda ifall spelaren har vunnit eller förlorat än
    if self.lives < 1:
        ret_tal = 1
    elif self.lvl == 10:
        ret_tal = 2
    else:
        ret_tal = 3
    return ret_tal


def skapa_dörr(choice, spelare): #Skapar en dörr
    dörr_1 = Dörr.bestäm(spelare)
    dörr_2 = Dörr.bestäm(spelare)
    dörr_3 = Dörr.bestäm(spelare)
    if choice == 1:
        return dörr_1
    elif choice == 2:
        return dörr_2
    else: 
        return dörr_3
    

def open_door(spelare):
    while True:
        try:
            val = int(input(Colors.black + "Vilken dörr vill du öppna (1,2,3)? -> " + Colors.endc))
            if val <= 3 and val >= 0:
                break
            else:
                print(Colors.red + "Finns inte den mängd dörrar!" + Colors.endc)
        except ValueError:
            print(f"{Colors.red + Colors.bold}Ogiltig input!{Colors.endc}")
    dörr = skapa_dörr(val, spelare)
    if dörr == 1:
        skapa_kista(spelare)
    elif dörr == 2:
        skapa_monster(spelare)
    elif dörr == 3:
        skapa_fälla(spelare)


def kolla_inventory(spelare):
    if len(spelare.inventory) == 0:
        print("\nDu har inget i ditt inventory\n")
    else: 
        print("\nDitt inventory:")
        for item in spelare.inventory: 
            print(f"  > {item.name} (+{item.str_bonus} STR) (+{item.def_bonus} DEF)")
        print()
        

def visa_egenskaper(spelare):
    print(f"\nDina egenskaper:\n   > Styrka: {spelare.strength}\n   > Försvar: {spelare.defence}\n   > Skicklighet: {spelare.dexterity}\n   > HP: {spelare.hp}\n   > LVL: {spelare.lvl}\n   > Liv: {spelare.lives}\n")


def combat(spelare, monster):
    if "Sword" or "Bow" or "Battleaxe" or "Spear" or "Dagger" in spelare.inventory:
        player_dmg_type = "weapon"
    else:
        player_dmg_type = "fist"
    while True:
        if monster.hp <= 0:
            print("Monstret dog och du vann!\n")
            spelare.lvl+=1
            break
        elif spelare.hp <= 0:
            if spelare.lives != 1:
                print("Monstret besegrade dig, men du blir teleporterad till ett tomt rum innan monstret hinner döda dig.")
            else:
                print(f"{Colors.red + Colors.bold}Monstret har dödat dig!{Colors.endc}")
            break
        else:
            print("Vad vill du göra?")
            choice = input("   > Anfalla med vapen (1)\n   > Använda en Magic Scroll(2)\n   > Fly (3)\n   -> ")
            if choice == "1":
                print("\nDu anfaller monstret.")
                if player_dmg_type == "weapon":
                    player_dmg = rand.randint(1, 10)+spelare.strength
                else:
                    player_dmg = rand.randint(1, 4)+spelare.strength
                if player_dmg > monster.defence//2:
                    print(f"Monstret tar {player_dmg - monster.defence//2} skada.")
                    monster.hp -= player_dmg - (monster.defence//2)
                    if monster.hp > 0:
                        print(f"Den har nu {monster.hp} HP\n")
                else:
                    print("Monstrets försvar var för högt och tog därför ingen skada!\n")
                if monster.hp > 0:
                    monster_dmg = rand.randint(1, 5) + monster.strength
                    print("Monstret anfaller dig!")
                    if monster_dmg < spelare.defence//2:
                        print("Din rustning var för stark för monstrets attack!")
                    else:
                        print(f"Du tog {monster_dmg - spelare.defence//2} skada.")
                        spelare.hp-=monster_dmg-spelare.defence//2
                        if spelare.hp > 0:
                            print(f"Spelarens HP är nere på {spelare.hp}\n")

            elif choice == "2":
                har_scroll = False
                for item in spelare.inventory:
                    if item.name == "Magic Scroll":
                        print("Du har använt en Magic Scroll!")
                        scroll_dmg = rand.randint(10, 20)
                        print(f"Din Magic Scroll gör {scroll_dmg} skada!")
                        monster.hp -= scroll_dmg
                        if monster.hp > 0:
                            print(f"Monstrets HP är nu {monster.hp}")
                        print("Din Magic Scroll brinner upp för du använde den.")
                        spelare.inventory.remove(item)
                        har_scroll = True
                        break
                if not har_scroll:
                    print("Du har ingen Magic Scroll!\n")
                
            elif choice == "3":
                sannolikhet = ((spelare.dexterity)*5)
                rng = rand.randint(1,100)
                if rng > sannolikhet:
                    print(f"\n{Colors.red}Du lyckades inte rymma och måste slåss!{Colors.endc}")
                    print("Monstret anfaller dig!")
                    monster_dmg = rand.randint(1, 5) + monster.strength//2
                    if monster_dmg < spelare.defence//2:
                        print("Din rustning var för stark för monstrets attack.")
                    else:
                        print(f"Du tog {monster_dmg - spelare.defence//2} skada.")
                        spelare.hp -= monster_dmg-spelare.defence//2
                        if spelare.hp > 0:
                            print(f"Spelarens HP är nere på {spelare.hp}\n")
                        else:
                            print()
                else:
                    print("Du lyckades rymma!")
                    break
            else:
                print(f"{Colors.red}Det var inte ett val!{Colors.endc}")


def choose(spelare):
    while True:
        val = input("Vad vill du göra? Öppna en dörr (1)\nKolla ditt inventory (2)\nEller visa dina egenskaper (3)\n-> ")
        if val == "1":
            open_door(spelare)
            break
        elif val == "2":
            kolla_inventory(spelare)
            break
        elif val == "3":
            visa_egenskaper(spelare)
            break
        else:
            print(f"{Colors.red + Colors.bold}Ogiltig input{Colors.endc}")

def skapa_karaktär():
    poäng = 15
    defence = 0
    strength = 0
    dexterity = 0
    slow_print("Du ska skapa din karaktär du har sammanlagt 15 poäng att spendera på STR, DEF och DEX",0.02)
    while poäng > 0:
        try:
            slow_print(f"Du har {poäng} poäng att spendera på försvar.",0.02)
            slow_print("Hur många poäng vill du spendera på försvar?",0.02)
            input_DEF = int(input("-> "))
            if input_DEF <= poäng:
                poäng -= input_DEF
                defence += input_DEF
            else: 
                print("Du har inte så många poäng!")
        except ValueError:
            print("Det är inte en siffra!")
        if poäng != 0:
            try:
                slow_print(f"Du har {poäng} poäng att spendera på styrka.",0.02)
                slow_print("Hur många poäng vill du spendera på styrka?",0.02)
                input_STR = int(input("-> "))
                if input_STR <= poäng:
                    poäng -= input_STR
                    strength += input_STR
                else:
                    print("Du har inte så många poäng!")
            except ValueError:
                print("Det är inte en siffra!")
        else:
            input_STR = 0
        if poäng != 0:
            try:
                slow_print(f"Du har {poäng} poäng att spendera på skicklighet",0.02)
                slow_print("Hur många vill du spendera på skicklighet?",0.02)
                input_DEX = int(input("-> "))
                if input_DEX <= poäng:
                    poäng -= input_DEX
                    dexterity += input_DEX
                else:
                    print("Du har inte så många poäng!")
            except ValueError:
                print("Det är inte en siffra!")
        else:
            input_DEX = 0
    spelare = Stats(strength, defence, dexterity, 50)
    print("")
    return spelare

def game():
    spelare = skapa_karaktär()
    while True:
        check = lvl_lives_kolla(spelare)
        if check == 1:
            print(f"{Colors.red + Colors.bold}Du förlorade :({Colors.endc}")
            break
        elif check == 2:
            print(f"{Colors.bold + Colors.yellow}Du vann :){Colors.endc}")
            break
        else:
            choose(spelare)
            if spelare.hp < 1:
                slow_print("Du har förlorat ett liv!\n",0.03)
                spelare.lives -= 1
                spelare.hp = 50
game()
